@page
@model UniEvents.WebApp.Pages.HomePageModel
@{
    ViewData["Title"] = "HomePage";
    Layout = "~/Pages/_Layout.cshtml";

}
<style>

    /*
        https://www.w3schools.com/howto/howto_css_modals.asp

    */
    .modal {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        z-index: 1; /* Sit on top */
        left: 0;
        top: 0;
        width: 100%; /* Full width */
        height: 100%; /* Full height */
        overflow: auto; /* Enable scroll if needed */
        background-color: rgb(0,0,0); /* Fallback color */
        background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
    }

    /* Modal Content/Box */
    .modal-content {
        background-color: #fefefe;
        margin: 15% auto; /* 15% from the top and centered */
        padding: 20px;
        border: 1px solid #888;
        width: 80%; /* Could be more or less, depending on screen size */
    }

    /* The Close Button */
    .close {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

        .close:hover,
        .close:focus {
            color: black;
            text-decoration: none;
            cursor: pointer;
        }
</style>

<h2>HomePage</h2>

<!-- The hidden pop up event description page -->
<div id="myModal" class="modal">

    <!-- Modal content -->
    <div class="modal-content" id="EventDescription">
        <span class="close">cancel</span>
        <button id="JoinEventButton">Join Event</button>
    </div>

</div>

<!--Handless the pop up modal for display an hide-->
<script>
    // Get the modal
    var modal = document.getElementById('myModal');

    // Get the <span> element that closes the modal
    var span = document.getElementsByClassName("close")[0];


    // When the user clicks on <span> (x), close the modal
    span.onclick = function () {
        modal.style.display = "none";
        document.getElementById("ya").remove()
    }

    // When the user clicks anywhere outside of the modal, close it
    window.onclick = function (event) {
        if (event.target == modal) {
            modal.style.display = "none";
            document.getElementById("ya").remove() // clears the modal so info doesnt stack
        }
    }
</script>


<input id="CreateEventButton" type="button" value="+" onclick="popUp()" />
<!--Diplays the feed for events, using info given by the Model, 
    dummy case is currently an int but i will spruce it up once i can access events and such-->

<div id="EventFeed">
    @foreach (int Event in Model.EventFeed) // create events and create a listener for each
    {
        <div>
            <button id="@Event" onclick="displayEventInfo(@Event)">
                Event: @Event with a short description and such
            </button>
        </div>
    }
</div>

<!--currently only adds one more button , only should need to change html and add a for loop-->
<input id="TenMoreButton" type="button" value="TenMore" />
<script>
    document.getElementById("TenMoreButton").addEventListener("click", function () {
        document.getElementById("EventFeed").insertAdjacentHTML('beforeend', '<div> <button id="newTag" onclick="displayEventInfo(newTag)"> his should work</button></div>');
        console.log("add ten more!!");

    });

    // this is where we would create a popup for event creation, currently it is blank
    function popUp() {
        window.prompt("create page and such");
    };

    // displays the pop up model and adds what info should populate it
    function displayEventInfo(EventId) {
        modal.style.display = 'block';
        var insertedHTML = '<p id="ya"> description about Event ' + EventId + '</p>';
        document.getElementById("EventDescription").insertAdjacentHTML('afterbegin', insertedHTML);

    }

</script>

