"use strict";
(function(n, t, i, r)
{
 i(n, t);
 r(n)
})(window, window.jQuery, function(n, t)
{
 Object.assign = Object.assign || t.extend
}, function(n)
{
 function t(n, t, i)
 {
  var f = Object.getOwnPropertyDescriptors(t),
   r,
   u;
  for (r in f)
   u = f[r],
   u.enumerable = i ? !0 : !1,
   Object.defineProperty(n, r, u)
 }
 (function()
 {
  t(String.prototype, {
   ReplaceAll: function(n, t)
   {
    return this.split(n).join(t)
   }, TrimStart: function(n)
    {
     var t = this,
      i;
     for (n != null && n.length || (n = " "), i = n.length; t.startsWith(n); )
      t = t.substr(i);
     return t
    }, TrimEnd: function(n)
    {
     var t = this,
      i;
     for (n != null && n.length || (n = " "), i = n.length; t.endsWith(n); )
      t = t.substr(0, t.length - i);
     return t
    }, SubstrBefore: function(n, t)
    {
     var i = this.indexOf(n);
     return i >= 0 && (t && (i += n.length), i <= this.length) ? this.substr(0, i) : this
    }, SubstrAfter: function(n, t)
    {
     var i = this.indexOf(n);
     return i >= 0 && (t || (i += n.length), i <= this.length) ? this.substr(i) : this
    }, SubstrBeforeLast: function(n, t)
    {
     var i = this.lastIndexOf(n);
     return i >= 0 && (t && (i += n.length), i <= this.length) ? this.substr(0, i) : this
    }, SubstrAfterLast: function(n, t)
    {
     var i = this.lastIndexOf(n);
     return i >= 0 && (t || (i += n.length), i <= this.length) ? this.substr(i) : this
    }
  })
 })(),
 function()
 {
  t(Element, {From: function(n, t)
   {
    return function(i)
     {
      var r,
       u;
      i = i.trim();
      var f = i.indexOf(">") + 1,
       o = i.lastIndexOf("<"),
       e = i.substr(0, f),
       s = i.substr(f, o - f);
      for (t.lastIndex = 0, r = n.createElement(t.exec(e)[4]); u = t.exec(e); )
       u[1] === undefined ? r.setAttribute(u[4], "") : r.setAttribute(u[1], u[3]);
      return r.innerHTML = s, r
     }
   }(n.document, /(\S+)=(["'])(.*?)(?:\2)|(\w+)/g)})
 }(),
 function()
 {
  t(DOMTokenList.prototype, {ToggleMultiple: function()
   {
    for (var t = arguments.length - 1, r = typeof arguments[t - 1] == "boolean", i, n = 0; n < t; n++)
     i = r ? this.toggle(arguments[n], arguments[t]) : this.toggle(arguments[n]);
    return i
   }})
 }(),
 function()
 {
  t(RegExp.prototype, {GetMatches: function(n)
   {
    this.lastIndex = 0;
    for (var t = [], i = null; i = this.exec(n); )
     t.push(i);
    return t
   }})
 }(),
 function()
 {
  var n = Object.defineProperties({}, {Last: {
     get: function()
     {
      return this[this.length - 1]
     }, set: function(n)
      {
       this[this.length - 1] = n
      }, configurable: !0, enumerable: !0
    }});
  t(NodeList.prototype, n);
  t(HTMLCollection.prototype, n);
  t(Array.prototype, n);
  Array.forEach = function(n, t)
  {
   if (n)
    for (var i = 0, r = n.length; i < r; i++)
     t(n[i], i)
  }
 }(),
 function()
 {
  var i = Element.prototype.matches,
   n = {
    ToArray: function()
    {
     for (var t = this.length, i = new Array(t), n = 0; n < t; n++)
      i[n] = this[n];
     return i
    }, Remove: function(n)
     {
      var t = 0,
       r = 0;
      if (n == null)
       for (t = 0, r = this.length; t < r; t++)
        this[t].remove();
      else if (typeof n == "string")
       for (t = 0, r = this.length; t < r; t++)
        i.call(this[t], n) && this[t].remove();
      else if (n instanceof Array)
       for (t = 0, r = n.length; t < r; t++)
        NodeList.prototype.Remove.call(this, n[t])
     }, CSS: function(n)
     {
      var u,
       i,
       e,
       r,
       o,
       f,
       t;
      if (n)
       for (u = Object.getOwnPropertyNames(n), i = 0, e = this.length; i < e; i++)
        for (r = 0, o = u.length; r < o; r++)
         f = u[r],
         t = n[f],
         typeof t == "number" && (t = t + "px"),
         this[i].style[f] = t
     }
   };
  t(NodeList.prototype, n);
  t(HTMLCollection.prototype, n)
 }()
}),
function(n, t, i, r)
{
 n.U = r(n, t, i, r)
}(window, window.document, window.jQuery, function(n)
{
 function u()
 {
  this.onReady = i.add;
  this.onLoaded = r.add
 }
 var t = function()
  {
   function i(n)
   {
    for (var t = 1, r = arguments.length, i = new Array(r - t + 1); t < r; t++)
     i[t - 1] = arguments[t];
    this._isReady ? n.apply(null, i) : this._callbacks.push({
     cb: n, args: i
    })
   }
   function r()
   {
    while (this._callbacks.length > 0)
    {
     var n = this._callbacks.shift();
     try
     {
      n.cb.apply(null, n.args)
     }
     catch(t)
     {
      console.error(t, n)
     }
    }
   }
   function t(t)
   {
    this._callbacks = [];
    this._isReady = !1;
    this.add = i.bind(this);
    n.addEventListener(t, r.bind(this))
   }
   return Object.assign(t.prototype, Object.defineProperties({}, {isReady: {
      get: function()
      {
       return this._isReady
      }, set: function(n)
       {
        (this._isReady = n) && this.runQueued()
       }, configurable: !0, enumerable: !0
     }})), t
  }(),
  i = new t("DOMContentLoaded"),
  r = new t("load");
 return new u
});